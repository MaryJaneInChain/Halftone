using Gtk 4.0;
using Adw 1;

template HalftoneDitherPage: Adw.PreferencesPage {
  Adw.PreferencesGroup preview_group {
    title: _("Preview");
    height-request: 200;

    Gtk.Stack preview_group_stack {
      transition-type: crossfade;

      Gtk.StackPage {
        name: "preview_stack_main_page";

        child: Gtk.Overlay {
          child: Adw.Bin {
            child: Gtk.Picture image_dithered {
              content-fit: contain;
              can-shrink: true;
              halign: center;
              valign: center;

              styles [
                "card"
              ]
            };

            styles [
              "card"
            ]
          };

          [overlay]
          Gtk.Button {
            halign: end;
            valign: end;
            margin-bottom: 12;
            margin-end: 12;
            icon-name: "adw-external-link-symbolic";
            tooltip-text: _("Open in External Image Viewer");
            action-name: "app.open-preview-image";

            styles [
              "osd",
              "circular"
            ]
          }
        };
      }

      Gtk.StackPage {
        name: "preview_stack_loading_page";

        child: Gtk.Box {
          valign: center;
          halign: center;

          Gtk.Spinner {
            spinning: true;
          }
        };
      }

      Gtk.StackPage {
        name: "preview_stack_error_page";

        child: Adw.StatusPage {
          hexpand: true;

          icon-name: "image-missing-symbolic";
          title: _("Image Error Occurred");
          description: _("An error occurred while loading an image. If this error persists, please report it to bug tracker.");
        };
      }
    }
  }

  //Adw.PreferencesGroup preview_before_group {
  //  title: _("Before");

  //  Gtk.Picture image_before {}
  //  height-request: 192;
  //}

  //Adw.PreferencesGroup preview_after_group {
  //  title: _("After");

  //  Gtk.Picture image_after {}
  //  height-request: 192;
  //}

  Adw.PreferencesGroup options_group {
    title: _("Options");

    [header-suffix]
    Gtk.MenuButton options_information_button {
      valign: center;
      popover: options_information_popover;
      icon-name: "help-about-symbolic";
      tooltip-text: _("Explanation");

      styles [
        "flat"
      ]
    }

    Adw.ComboRow dither_algorithms_combo {
      title: _("Dither Algorithm");
      model: Gtk.StringList algorithms_stringlist {};
    //  notify::selected => on_dither_algorithm_selected();
    }

    //Adw.ComboRow color_palette {
    //  title: _("Color Palette");
    //  model: Gtk.StringList color_palettes {};
    //}

    Adw.ActionRow color_amount {
      title: _("Color Amount");
      activatable-widget: color_amount_spinbutton;

      Gtk.SpinButton color_amount_spinbutton {
        valign: center;
        climb-rate: 1;
        adjustment: Gtk.Adjustment color_amount_adjustment {
          lower: 1;
          upper: 256;
          step-increment: 1;
          page-increment: 5;
        };
        value-changed => on_color_amount_changed();
      }
    }

    Adw.ComboRow save_format_combo {
      title: _("Convert To");
      model: Gtk.StringList image_formats_stringlist {};
    }
  }

  Adw.PreferencesGroup {
    Adw.ExpanderRow image_properties_expander {
      title: _("Image Properties");
      enable-expansion: false;

      [action]
      Gtk.Box {
        orientation: horizontal;
        spacing: 10;
        valign: center;

        Gtk.ToggleButton brightness_toggle {
          tooltip-text: _("Brightness");
          icon-name: "image-adjust-brightness-symbolic";
          clicked => on_brightness_toggled();
        }

        Gtk.ToggleButton contrast_toggle {
          tooltip-text: _("Contrast");
          icon-name: "image-adjust-contrast-symbolic";
          clicked => on_contrast_toggled();
        }

        Gtk.ToggleButton image_size_toggle {
          tooltip-text: _("Image Size");
          icon-name: "image-adjust-size-symbolic";
          clicked => on_resize_toggled();
        }

        //Gtk.Button {
        //  tooltip-text: _("Image Width");
        //  icon-name: "size-horizontally-symbolic";
          //clicked => on_width_clicked();
        //}

        //Gtk.Button {
        //  tooltip-text: _("Image Height");
        //  icon-name: "size-vertically-symbolic";
          //clicked => on_height_clicked();
        //}
      }
    }
  }

  Adw.PreferencesGroup {
    Gtk.Box {
      orientation: horizontal;
      halign: center;
      spacing: 6;

      Gtk.Button more_options_button {
        visible: false;
        label: _("More Options");

        styles [
          "pill"
        ]
      }

      Gtk.Button save_image_button {
        label: _("Dither It!");
        action-name: "app.save-image";

        styles [
          "pill",
          "suggested-action"
        ]
      }
    }
  }
}

Adw.ActionRow image_size_row {
  title: _("Image Size");

  Gtk.Box {
    orientation: horizontal;
    spacing: 4;
    valign: center;

    Gtk.SpinButton image_width_spinbutton {
      tooltip-text: _("Image Width");
      adjustment: Gtk.Adjustment image_width_adjustment {
        lower: 1;
        upper: 8192;
        step-increment: 1;
        page-increment: 5;
      };
      value-changed => on_image_width_value_changed();
    }

    Gtk.ToggleButton aspect_ratio_toggle {
      icon-name: "chain-link-symbolic";
      tooltip-text: _("Keep aspect ratio");
      active: true;

      styles [
        "flat"
      ]
    }

    Gtk.SpinButton image_height_spinbutton {
      tooltip-text: _("Image Height");
      sensitive: false;
      adjustment: Gtk.Adjustment image_height_adjustment {
        lower: 1;
        upper: 8192;
        step-increment: 1;
        page-increment: 5;
      };
      value-changed => on_image_height_value_changed();
    }
  }
}

Adw.ActionRow brightness_row {
  title: _("Brightness");
  activatable-widget: brightness_spinbutton;

  Gtk.SpinButton brightness_spinbutton {
    valign: center;
    tooltip-text: _("Brightness");
    adjustment: Gtk.Adjustment brightness_adjustment {
      lower: -100;
      upper: 100;
      step-increment: 1;
      page-increment: 5;
    };
    value-changed => on_brightness_value_changed();
  }
}

Adw.ActionRow contrast_row {
  title: _("Contrast");
  activatable-widget: contrast_spinbutton;

  Gtk.SpinButton contrast_spinbutton {
    valign: center;
    tooltip-text: _("Contrast");
    adjustment: Gtk.Adjustment contrast_adjustment {
      lower: -100;
      upper: 100;
      step-increment: 1;
      page-increment: 5;
    };
    value-changed => on_contrast_value_changed();
  }
}

Gtk.Popover options_information_popover {
  autohide: true;

  Gtk.Box {
    orientation: vertical;
    margin-top: 6;
    margin-bottom: 6;
    margin-start: 6;
    margin-end: 6;

    Gtk.Label {
      wrap: true;
      justify: center;
      max-width-chars: 40;
      label: _("You can customize some of these parameters to make your image look different. To learn more about individual options, go to the wiki page.");
    }

    Gtk.LinkButton {
      label: _("Wiki Page");
      uri: "https://github.com/tfuxu/Halftone/wiki/Options";
    }
  }
}

Gtk.FileChooserNative save_image_chooser {
  title: _("Save an Image inâ€¦");
  modal: true;
}

Gtk.FileFilter all_filter {
  name: _("All files");
  mime-types ["application/octet-stream"]
}
